name: CI for moq-rs

on:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * * # At the end of everyday
  pull_request: #TODO: run only on dependabot updates
  release:
    types: [published]

# Cancel previous runs of the same workflow on the same branch.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
    build-warp-release:
      if: ${{ github.event_name == 'release' }}
      defaults:
        run:
          working-directory: moq-server
      strategy:
        fail-fast: false
        matrix:
          settings:
            - host: ubuntu-20.04
              target: x86_64-unknown-linux-gnu
              bundles: appimage
              asset_name: warp-ubuntu-amd64
            - host: windows-latest
              target: x86_64-pc-windows-msvc
              bundles: msi
              asset_name: warp-windows-amd64
            - host: macos-latest
              target: x86_64-apple-darwin
              bundles: dmg
              asset_name: warp-macos-amd64
            - host: macos-latest
              target: aarch64-apple-darwin
              bundles: dmg
              asset_name: warp-macos-apple-silicon
            # - host: ubuntu-20.04
            #   target: x86_64-unknown-linux-musl
            # - host: ubuntu-20.04
            #   target: aarch64-unknown-linux-gnu
            # - host: ubuntu-20.04
            #   target: aarch64-unknown-linux-musl
            # - host: ubuntu-20.04
            #   target: armv7-unknown-linux-gnueabihf
      name: Build warp on release
      runs-on: ${{ matrix.settings.host }}
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3
          with:
            submodules: recursive

        - name: Install Rust
          id: toolchain
          uses: dtolnay/rust-toolchain@stable
          with:
            targets: x86_64-unknown-linux-gnu
            toolchain: stable
            components: clippy, rustfmt

        - name: Cache Rust Dependencies
          uses: Swatinem/rust-cache@v2
          with:
            save-if: false
            prefix-key: 'v0-rust-deps'
            shared-key: x86_64-unknown-linux-gnu

        - name: Cargo build
          run: cargo build --target x86_64-unknown-linux-gnu --manifest-path ./moq-pub/Cargo.toml --release

        - name: Copy and rename artifacts (Linux)
          if: ${{ matrix.settings.host == 'ubuntu-20.04' }}
          run: |
            cp target/x86_64-unknown-linux-gnu/release/moq-pub ./warp
      
        - name: Copy and rename artifacts (Windows)
          if: ${{ matrix.settings.host == 'windows-latest' }}
          run: |
            cp "target/x86_64-unknown-linux-gnu/release/moq-pub.exe" ./warp.exe
          
        - name: Copy and rename artifacts (macOS)
          if: ${{ matrix.settings.host == 'macos-latest' }}
          run: |
            cp target/x86_64-unknown-linux-gnu/release/moq-pub ./warp
        
        - name: Publish release for (${{ matrix.settings.host }})
          if: ${{ matrix.settings.host == 'windows-latest' }}
          uses: svenstaro/upload-release-action@2.7.0
          with: 
            repo_token: ${{ secrets.GITHUB_TOKEN  }}
            file: ./moq-server/warp.exe
            asset_name:  ${{ matrix.settings.asset_name }}
            tag: ${{ github.ref }}
      
        - name: Publish release for (${{ matrix.settings.host }})
          if: ${{ matrix.settings.host != 'windows-latest' }}
          uses: svenstaro/upload-release-action@2.7.0
          with: 
            repo_token: ${{ secrets.GITHUB_TOKEN  }}
            file: ./moq-server/warp
            asset_name:  ${{ matrix.settings.asset_name }}
            tag: ${{ github.ref }}
    
    build-warp-pr:
        if: ${{ github.event_name == 'pull_request' }}
        name: Build warp on PR
        defaults:
          run:
            working-directory: moq-server
        runs-on: ubuntu-20.04
        steps:
          - name: Checkout repository
            uses: actions/checkout@v3
            with:
              submodules: recursive
  
          - name: Install Rust
            id: toolchain
            uses: dtolnay/rust-toolchain@stable
            with:
              targets: x86_64-unknown-linux-gnu
              toolchain: stable
              components: clippy, rustfmt
  
          - name: Cache Rust Dependencies
            uses: Swatinem/rust-cache@v2
            with:
              save-if: false
              prefix-key: 'v0-rust-deps'
              shared-key: x86_64-unknown-linux-gnu
  
          - name: Cargo build
            run: cargo build --target x86_64-unknown-linux-gnu --manifest-path ./moq-pub/Cargo.toml --release
  
          - name: Copy and rename artifacts (Linux)
            run: |
              cp target/x86_64-unknown-linux-gnu/release/moq-pub ./warp
        
          - name: Publish artifacts
            uses: actions/upload-artifact@v4
            with:
              name: warp-ubuntu-amd64
              path: ./moq-server/warp
              if-no-files-found: error
              retention-days: 5